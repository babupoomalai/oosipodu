{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scanImageData = exports.scanRGBABuffer = exports.scanGrayBuffer = exports.getDefaultScanner = void 0;\n\nconst Image_1 = require(\"./Image\");\n\nconst ImageScanner_1 = require(\"./ImageScanner\");\n\nconst defaultScannerPromise = ImageScanner_1.ImageScanner.create();\n\nexports.getDefaultScanner = async () => {\n  return await defaultScannerPromise;\n};\n\nconst scanImage = async (image, scanner) => {\n  if (scanner === undefined) {\n    scanner = await defaultScannerPromise;\n  }\n\n  const res = scanner.scan(image);\n\n  if (res < 0) {\n    throw Error('Scan Failed');\n  }\n\n  if (res === 0) return [];\n  return image.getSymbols();\n};\n\nexports.scanGrayBuffer = async (buffer, width, height, scanner) => {\n  const image = await Image_1.Image.createFromGrayBuffer(width, height, buffer);\n  const res = await scanImage(image, scanner);\n  image.destroy();\n  return res;\n};\n\nexports.scanRGBABuffer = async (buffer, width, height, scanner) => {\n  const image = await Image_1.Image.createFromRGBABuffer(width, height, buffer);\n  const res = await scanImage(image, scanner);\n  image.destroy();\n  return res;\n};\n\nexports.scanImageData = async (image, scanner) => {\n  return await exports.scanRGBABuffer(image.data.buffer, image.width, image.height, scanner);\n};","map":{"version":3,"sources":["../src/module.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAGA,MAAM,qBAAqB,GAAG,cAAA,CAAA,YAAA,CAAa,MAAb,EAA9B;;AACa,OAAA,CAAA,iBAAA,GAAoB,YAAW;AAC1C,SAAO,MAAM,qBAAb;AACD,CAFY;;AAIb,MAAM,SAAS,GAAG,OAChB,KADgB,EAEhB,OAFgB,KAGU;AAC1B,MAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,IAAA,OAAO,GAAG,MAAM,qBAAhB;AACD;;AACD,QAAM,GAAG,GAAG,OAAO,CAAC,IAAR,CAAa,KAAb,CAAZ;;AACA,MAAI,GAAG,GAAG,CAAV,EAAa;AACX,UAAM,KAAK,CAAC,aAAD,CAAX;AACD;;AACD,MAAI,GAAG,KAAK,CAAZ,EAAe,OAAO,EAAP;AACf,SAAO,KAAK,CAAC,UAAN,EAAP;AACD,CAbD;;AAea,OAAA,CAAA,cAAA,GAAiB,OAC5B,MAD4B,EAE5B,KAF4B,EAG5B,MAH4B,EAI5B,OAJ4B,KAKF;AAC1B,QAAM,KAAK,GAAG,MAAM,OAAA,CAAA,KAAA,CAAM,oBAAN,CAA2B,KAA3B,EAAkC,MAAlC,EAA0C,MAA1C,CAApB;AACA,QAAM,GAAG,GAAG,MAAM,SAAS,CAAC,KAAD,EAAQ,OAAR,CAA3B;AACA,EAAA,KAAK,CAAC,OAAN;AACA,SAAO,GAAP;AACD,CAVY;;AAYA,OAAA,CAAA,cAAA,GAAiB,OAC5B,MAD4B,EAE5B,KAF4B,EAG5B,MAH4B,EAI5B,OAJ4B,KAKF;AAC1B,QAAM,KAAK,GAAG,MAAM,OAAA,CAAA,KAAA,CAAM,oBAAN,CAA2B,KAA3B,EAAkC,MAAlC,EAA0C,MAA1C,CAApB;AACA,QAAM,GAAG,GAAG,MAAM,SAAS,CAAC,KAAD,EAAQ,OAAR,CAA3B;AACA,EAAA,KAAK,CAAC,OAAN;AACA,SAAO,GAAP;AACD,CAVY;;AAYA,OAAA,CAAA,aAAA,GAAgB,OAC3B,KAD2B,EAE3B,OAF2B,KAGD;AAC1B,SAAO,MAAM,OAAA,CAAA,cAAA,CACX,KAAK,CAAC,IAAN,CAAW,MADA,EAEX,KAAK,CAAC,KAFK,EAGX,KAAK,CAAC,MAHK,EAIX,OAJW,CAAb;AAMD,CAVY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scanImageData = exports.scanRGBABuffer = exports.scanGrayBuffer = exports.getDefaultScanner = void 0;\nconst Image_1 = require(\"./Image\");\nconst ImageScanner_1 = require(\"./ImageScanner\");\nconst defaultScannerPromise = ImageScanner_1.ImageScanner.create();\nexports.getDefaultScanner = async () => {\n    return await defaultScannerPromise;\n};\nconst scanImage = async (image, scanner) => {\n    if (scanner === undefined) {\n        scanner = await defaultScannerPromise;\n    }\n    const res = scanner.scan(image);\n    if (res < 0) {\n        throw Error('Scan Failed');\n    }\n    if (res === 0)\n        return [];\n    return image.getSymbols();\n};\nexports.scanGrayBuffer = async (buffer, width, height, scanner) => {\n    const image = await Image_1.Image.createFromGrayBuffer(width, height, buffer);\n    const res = await scanImage(image, scanner);\n    image.destroy();\n    return res;\n};\nexports.scanRGBABuffer = async (buffer, width, height, scanner) => {\n    const image = await Image_1.Image.createFromRGBABuffer(width, height, buffer);\n    const res = await scanImage(image, scanner);\n    image.destroy();\n    return res;\n};\nexports.scanImageData = async (image, scanner) => {\n    return await exports.scanRGBABuffer(image.data.buffer, image.width, image.height, scanner);\n};\n//# sourceMappingURL=module.js.map"]},"metadata":{},"sourceType":"script"}