{"version":3,"sources":["js/api.js"],"names":["baseURL","sha256","message","msgUint8","TextEncoder","encode","crypto","subtle","digest","hashBuffer","hashArray","Array","from","Uint8Array","hashHex","map","b","toString","padStart","join","exports","sendOTP","mobile","$","text","removeAttr","fetch","method","headers","body","JSON","stringify","secret","validateOTP","id","otp","txnId","response","json","getBeneficiaries","token","Authorization","getCaptcha"],"mappings":"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","file":"api.0997d2ba.js","sourceRoot":"..","sourcesContent":["// import jquery from \"jquery\";\n// export default (window.$ = window.jQuery = jquery);\n\nconst baseURL = 'https://cdn-api.co-vin.in/api/v2'\n\n\nconst sha256 = async function (message) {\n\tconst msgUint8 = new TextEncoder().encode(message)\n\tconst hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8)\n\tconst hashArray = Array.from(new Uint8Array(hashBuffer))\n\tconst hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('')\n\treturn hashHex\n}\n\n\nexports.sendOTP = async function (mobile) {\n\t// const mobile = $('#mobileNo').val();\n\t$('#alert').text('OTP successfully sent to ' + mobile);\n\t$('#alertPanel').removeAttr('style');\n\t$('#validatePanel').removeAttr('style');\n\treturn fetch(`${baseURL}/auth/generateMobileOTP`, {\n\t\tmethod: 'post',\n\t\theaders: {'Content-Type': 'application/json'},\n\t\tbody: JSON.stringify({\n\t\t\tmobile,\n\t\t\tsecret: 'U2FsdGVkX19mD56KTNfQsZgXJMwOG7u/6tuj0Qvil1LEjx783oxHXGUTDWYm+XMYVGXPeu+a24sl5ndEKcLTUQ=='\n\t\t})\n\t})\n}\n\nexports.validateOTP = async function (id, otp) {\n\tconst response = await fetch(`${baseURL}/auth/validateMobileOtp`, {\n\t\tmethod: 'post',\n\t\theaders: {'Content-Type': 'application/json'},\n\t\tbody: JSON.stringify({\n\t\t\ttxnId: id,\n\t\t\totp: await sha256(otp)\n\t\t})\n\t})\n\n\treturn response.json()\n}\n\nexports.getBeneficiaries = async function (token) {\n\tconst response = await fetch(`${baseURL}/appointment/beneficiaries`, {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t}\n\t})\n\n\treturn response.json()\n}\n\nexports.getCaptcha = async function (token) {\n\tconst response = await fetch(`${baseURL}/auth/getRecaptcha`, {\n\t\tmethod: 'post',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t},\n\t\tbody: JSON.stringify({})\n\t})\n\n\treturn response.json()\n}\n\n"]}